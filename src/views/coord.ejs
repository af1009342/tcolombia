<%- layout('layouts/main') %>
<h1 class="mt-4 text-center">Coordinador <%= user.email %></h1>
<!--
<div class="container">
  <div class="row">
    <div class="col">
      <div class="col-md-12 mt-4">
        <div class="card mt-4 text-center">
          <div class="car-header">
            <h3>ordenar</h3>
          </div>
          <div class="card-body">
            <form id="order" action="/coord/add" method="POST">
              <input type="text" name="coord" value="af1009342@gmail.com">
              <div class="form-group">
                <input type="text" name="pasajero" placeholder="pasajero" class="form-control">
              </div>
              <div class="form-group">
                <input type="text" name="direccion" placeholder="direccion" class="form-control">
              </div>
              <div class="form-group">
                <input type="text" name="estado" placeholder="estado" class="form-control">
              </div>
              <button type="submit" class="btn btn-primary mt-4 btn-block">
                programar
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>-->

<div class="container-fluid">
  <!--FORM-->
   <div class="col-md-12">
    <div class="card">
      <div class="card-body">
        <form id="for_orden" name="for_orden" action="/add" method="post">            
      <center><h3>Iniciar Orden de servicio.</h3></center>
      
      <% include partials/_form_pedi %>


      
      <button type="submit" class="btn btn-primary mt-4 btn-block">
          programar Servicio
        </button>

      </form>
      <button id="llenar" name="llenar" class="btn btn-primary mt-4 btn-block" align="center">datos ejemplo</button>
      </div>
      </div>
      </div>
      
      </div>      
<!--  
<div class="col-md-12 mt-4">
  <table class="table table-bordered table-hover">
    <thead class="thead-dark">
      <tr>
        <th scope="col">N°</th>
        <th scope="col">Servicio</th>
        <th scope="col">Pasajero</th>
        <th scope="col">Estado</th>
        <th scope="col">Vehículo</th>
        <th scope="col">Otros</th>
        <th scope="col">Operaciones</th>
      </tr>
    </thead>
    <tbody>
      <% for(var i=0; i < tasks.length; i++) { %>
      <tr>
        <td scope="row"><%= i + 1%></td>
        <td>datos del contrato</td>
        <td>
          <p>nit_cc <br><%= tasks[i].pasajero %><br><%= tasks[i].direccion %><br>email</p>
        </td>
        <td>
          <P><strong><%= tasks[i].estado %><%= tasks[i].notifico %><br></strong></p>
        </td>
        <td>asignado a: <%= tasks[i].asignado %></td>
        <td></td>
        <td> 
         <a id="cancelar" href="/coord/delete/<%= tasks[i]._id %>" class="btn btn-danger">
            Cancelar
          </a> 
          <button id="<%= tasks[i]._id %>" class="btn btn-danger delete">Cancelar.</button>
          <a href="/coord/edit/<%= tasks[i]._id %>" class="btn btn-info">
            Editar
          </a>
        </td>
      </tr>
      <% } %>
    </tbody>
  </table>

</div>
-->
<!--ini-->
<div class="col-md-12 mt-8">
    <table
    id="tablex"
    data-toggle="tablex"
    data-url="/data/coord/<%= user.email %>"
    data-toolbar="#toolbar"
    data-search="true"
    data-show-refresh="true"
    data-show-toggle="true"
    data-show-fullscreen="true"
    data-show-columns="true"
    data-detail-view="true"
    data-show-export="true"
    data-detail-formatter="detailFormatter"
    data-minimum-count-columns="2"
    data-show-pagination-switch="true"
    data-pagination="true"
    data-id-field="id"
    data-page-list="[10, 25, 50, 100, ALL]"
    data-show-footer="true"
    data-side-pagination="server"
    data-response-handler="responseHandler"        
    class="table table-bordered table-hover">
 <thead class="thead-dark">
      <tr>        
        <th data-field="pasajero">pasajero</th> 
        <th data-field="direccion">direccion</th>
        <th data-field="estado">estado</th>
        <th data-field="asignado">asignado</th>
      </tr>
    </thead>
  </table>


  <div id="toolbar">
    <button id="remove" class="btn btn-danger" disabled>
      <i class="glyphicon glyphicon-remove"></i> Delete
    </button>
  </div>
</div>

<!--fin-->
<!--fin
<div class="col">
  <div class="col-md-6 offset-md-6">
    <div class="card mt-1 text-center">
      <div class="car-header">
        <h3>Chat</h3>
      </div>
      <div class="card-body">
        <div id="chat-container">
          <div id="chat-window">
            <div id="output"></div>
            <div id="actions"></div>
          </div>
        
          <input id="username" type="text" placeholder="username">
          <input id="message" type="text" placeholder="message">
          <button id="send">Send</button>
        </div>
      </div>
    </div>
  </div>
</div> 
-->

<!--socket.io -->
<script src="/socket.io/socket.io.js"></script>

<script>


var frm = $('#for_orden');  
frm.submit(function (e) {
    e.preventDefault();    
    var data_save = $("#for_orden").serialize()+ '&coord=' + '<%= user.email %>';
    //alert('vas a enviar'+data_save);
    $.ajax({
                url: '/coord/add', // url where to submit the request
                type : "POST", // type of action POST || GET
                dataType : 'json', // data type
                data : data_save, // post data || get data
                success : function(result) {
                    // you can see the result from the console
                    // tab of the developer tools
                    console.log(result);
                    socket.emit('coord:oper', {
                    message: "actualiza bandeja de entrada operador",
                    accion: "ingreso servicio"
                    });
                    $table.bootstrapTable('refresh');
                },
                error: function(xhr, resp, text) {
                    console.log(xhr, resp, text);
                }
            })
    //this will prevent the default submit
  /*   console.log('serializando.........');
    console.log($(this).serialize());
    $(this).unbind('submit').submit();

    socket.emit('coord:oper', {
      message: "actualiza bandeja de entrada",
      username: "cualquier user"
    });
    console.log('actualiza_socket');
    
   */ 
  });


/*   function actauliza_socket() {
    
    socket.emit('coord:oper', {
      message: "actualiza bandeja de entrada",
      username: "cualquier user"
    });
    console.log('actualiza_socket');
  } */

  // conenction
  let socket = io();

  // DOM elements
  //let message = document.getElementById('message');
  let username = document.getElementById('username');
  //let btn = document.getElementById('send');
  let output = document.getElementById('output');
  let actions = document.getElementById('actions');

  /* btn.addEventListener('click', function () {
    socket.emit('chat:message', {
      message: message.value,
      username: username.value
    });
  }); */

/*   message.addEventListener('keypress', function () {
    socket.emit('chat:typing', username.value);
  }); */

  socket.on('chat:message', function (data) {
    actions.innerHTML = '';
    output.innerHTML += `<p>
     <strong>${data.username}</strong>: ${data.message}
   </p>`
  });

  socket.on('chat:typing', function (data) {
    actions.innerHTML = `<p><em>${data} is typing a message...</em></p>`
  });

 var $table = $('#tablex');
 var $remove = $('#remove');


  socket.on('coord:oper', function(data) {
    console.log("entro en coord:oper");
    console.log(data);
   $table.bootstrapTable('refresh');
 });



 var selections = []
              
                function getIdSelections() {
                  return $.map($table.bootstrapTable('getSelections'), function (row) {
                    return row.id
                  })
                }
              
                function responseHandler(res) {
                  $.each(res.rows, function (i, row) {
                    row.state = $.inArray(row.id, selections) !== -1
                  })
                  return res
                }
              
                function detailFormatter(index, row) {
                  var html = []
                  $.each(row, function (key, value) {
                    html.push('<p><b>' + key + ':</b> ' + value + '</p>')
                  })
                  return html.join('')
                }
              
                function operateFormatter(value, row, index) {
                  return [
                    '<a class="remove" href="javascript:void(0)" title="Remove">',
                    '<i class="fa fa-trash"></i>',
                    '</a>'
                  ].join('')
                }
              
                window.operateEvents = {                  
                  'click .remove': function (e, value, row, index) {              
                    if(confirm("Esta seguro de que quiere eliminar este servicio.?")){
                      $.ajax({
                      url:"/coord/delete/"+row._id,
                      method:"GET",     
                      success:function(data){
                        socket.emit('coord:oper', {
                        message: "actualiza bandeja de entrada",
                        accion: "coord elimina servicio"
                      });
                      socket.emit('oper:motor', {
                        message: "actualiza bandeja de entrada",
                        accion: "coord elimina servicio"
                      });
                      $table.bootstrapTable('refresh');
                      }
                      });
                    }
                    
                  }
                }
              
                function totalTextFormatter(data) {
                  return 'Total';
                }
              
                function totalNameFormatter(data) {
                  return data.length;
                }
              
                function totalPriceFormatter(data) {
                  var field = this.field;
                  return '$' + data.map(function (row) {
                    return +row[field].substring(1)
                  }).reduce(function (sum, i) {
                    return sum + i;
                  }, 0)
                }
              
                function initTable() {
                  $table.bootstrapTable('destroy').bootstrapTable({
                    height: 550,
                    locale: 'es-ES',//$('#locale').val(),
                    columns: [
                      [{
                        field: 'state',
                        checkbox: true,
                        rowspan: 2,
                        align: 'center',
                        valign: 'middle'
                      }, {
                        title: 'Pasajero',
                        field: 'pasajero',    
                        rowspan: 2,
                        align: 'center',
                        valign: 'middle',
                        sortable: true
                        //,
                        //footerFormatter: totalTextFormatter
                      }, {
                        title: 'Detalles Servicio',
                        colspan: 3,
                        align: 'center'
                      }],
                      [{
                        field: 'direccion',
                        title: 'direccion',
                        sortable: true,
                        //footerFormatter: totalNameFormatter,
                        align: 'center'
                      }, {
                        field: 'estado',
                        title: 'estado',
                        sortable: true,
                        align: 'center',
                        //footerFormatter: totalPriceFormatter
                      }, {
                        field: 'operate',
                        title: 'Item Operate',
                        align: 'center',
                        events: window.operateEvents,
                        formatter: operateFormatter
                      }, {
                        field: 'asignado',
                        title: 'asignado',
                        sortable: true,
                        align: 'center',
                        //footerFormatter: totalPriceFormatter
                      }]
                    ]
                  })
                  $table.on('check.bs.table uncheck.bs.table ' +
                    'check-all.bs.table uncheck-all.bs.table',
                  function () {
                    $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
              
                    // save your data, here just save the current page
                    selections = getIdSelections();
                    // push or splice the selections if you want to save all data selections
                  })
                  $table.on('all.bs.table', function (e, name, args) {
                    console.log(name, args);
                  });
                  $remove.click(function () {
                    var ids = getIdSelections();
                    $table.bootstrapTable('remove', {
                      field: 'id',
                      values: ids
                    })
                    $remove.prop('disabled', true);
                  })
                }
              
                $(function() {
                  initTable();
        
        
                });

</script>

<script>
  $.validator.setDefaults({
    submitHandler: function () {
      confirm('Are you sure?');
      if (confirm('Are you sure?')) {
        form.submit();
      }
    }
  });

  $().ready(function () {
    jQuery.validator.addMethod("phoneno", function (phone_number, element) {
      phone_number = phone_number.replace(/\s+/g, "");
      return this.optional(element) || phone_number.length > 9 &&
        phone_number.match(/^((\+[1-9]{1,4}[ \-]*)|(\([0-9]{2,3}\)[ \-]*)|([0-9]{2,4})[ \-]*)*?[0-9]{3,4}?[ \-]*[0-9]{3,4}?$/);
    }, "<br />Please specify a valid phone number");

    // validate signup form on keyup and submit
    $("#for_orden").validate({
      rules: {
        //contrato y ficha quedan pendientes
        nit_cc: {
          required: true,
          minlength: 5
        },
        pasajero: {
          required: true,
          minlength: 4
        },
        tel_cel: {
          required: true,
          phoneno: true
        },
        email: {
          required: true,
          email: true
        },
        tiempo_recogida: {
          required: true
        },
        ida_dire: {
          required: true
        },
        depar_ciu_ida: {
          required: true
        },
        des_i_dire: {
          required: true
        },
        depar_ciu_des_i: {
          required: true
        },
        tiempo_partida: {
          required: true
        },
        reg_dire: {
          required: true
        },
        depar_ciu_reg_r: {
          required: true
        },
        depar_ciu_reg: {
          required: true
        },
        des_reg_dire: {
          required: true
        },
      },

      messages: {
        pasajero: {
          required: "Por favor ingrese nombre del pasajero",
          minlength: "El nombre de pasajero debe tener por lo menos 4 letras"
        },
        nit_cc: {
          required: "Por favor ingrese nit o cedula del pasajero",
          minlength: "la cedula o nit de pasajero debe tener por lo menos 5 números"
        },
        tel_cel: {
          required: "Ingrese un Numero Celular",
          phoneno: "Ingrese un Numero Celular Valido solo números"
        },
        email: "Por Favor ingrese una dirección email valida",
        tiempo_recogida: "Por Favor ingrese una hora y fecha de recogida Valida",
        tiempo_partida: "Por Favor ingrese una hora y fecha de salida Valida",
        ida_dire: "Por favor ingrese la dirección de recogida",
        depar_ciu_ida: "Por favor selecciona Departamento-Municipio de recogida",
        des_i_dire: "Por favor ingrese la dirección de destino",
        depar_ciu_des_i: "Por favor selecciona Departamento-Municipio de Destino",
        reg_dire: "Por favor ingrese la dirección de recogida o retorno",
        depar_ciu_reg_r: "Por favor selecciona Departamento-Municipio de destino para retorno",
        depar_ciu_reg: "Por favor selecciona Departamento-Municipio de recogida para retorno",
        des_reg_dire: "Por favor ingrese la dirección de destino para la recogida o retorno",
      }
    });



  });
</script>

<script>

  $(document).ready(function () {

 
    //inicializa los fechas    
    $('#tiempo_partida').datetimepicker({
      //defaultDate: moment(), //fecha por defecto	                
      format: 'YYYY-MM-DD H:m:s',
      minDate: moment()
    });

    $('#tiempo_recogida').datetimepicker({
      //defaultDate: moment(), //fecha por defecto	            
      format: 'YYYY-MM-DD H:m:s',
      useCurrent: false //Important! See issue #1075
    });
    //tiempo_partida < tiempo_recogida
    $("#tiempo_partida").on("dp.change", function (e) {
      $('#tiempo_recogida').data("DateTimePicker").minDate(e.date);

    });

    $("#tiempo_recogida").on("dp.change", function (e) {
      $('#tiempo_partida').data("DateTimePicker").maxDate(e.date);
    });

    //inicializo el formulario      
    document.getElementById("solo_ida").checked = true;
    document.getElementById("ida_regreso").checked = false;
    document.getElementById("libre").checked = false;

    on_off_content_div('regreso', true);
    on_off_content_div('libre_btn', true);
    //identifico la orden de servicio
    codigounico();

    //codigo formulario validacion fin

    $(".w3-button").mouseover(function () {
      var text = $(this).attr("data-message");
      var phone = $(this).attr("data-number");
      var message = encodeURIComponent(text);
      if (isMobile.any()) {
        //mobile device
        var whatsapp_API_url = "whatsapp://send";
        $(this).attr('href', whatsapp_API_url + '?phone=' + phone + '&text=' + message);
      } else {
        //desktop
        var whatsapp_API_url = "https://web.whatsapp.com/send";
        $(this).attr('href', whatsapp_API_url + '?phone=' + phone + '&text=' + message);
      }
    });
  });

  //inicio boton llenar
  document.getElementById("llenar").onclick = function () {
    // e.preventDefault();     

    //$("#id_reg_mas").val("20190425113423");

    $("#contrato").val("CT-0754-002");
    $("#nit_cc").val("22222222222");
    $("#pasajero").val("Hz Ingenieria");
    $("#tel_cel").val("03233300333");
    $("#email").val("nose@hotmail.com");

    document.getElementById("solo_ida").checked = false;
    document.getElementById("ida_regreso").checked = true;
    document.getElementById("libre").checked = false;

    on_off_content_div('regreso', false);
    on_off_content_div('libre_btn', false);

    $("#tiempo_recogida").val("2019-08-24 15:25:21");
    $("#ida_dire").val("carrera 43 #26-33");
    $("#ida_dire2").val("Oficina 501");
    $("#depar_ciu_ida").val("VALLE DEL CAUCA-CALI");
    $("#des_i_dire").val("carrera 43 #26-33");
    $("#des_i_dire2").val("Oficina 501");
    $("#depar_ciu_des_i").val("VALLE DEL CAUCA-CALI");

    $("#fech_hor_reg").val("2019-4-26 11:00:34");
    $("#reg_dire").val("carrera 43 #26-33");
    $("#reg_dire2").val("Oficina 501");
    $("#depar_ciu_reg").val("VALLE DEL CAUCA-CALI");
    $("#des_reg_dire").val("carrera 43 #26-33");
    $("#des_reg_dire2").val("Oficina 501");
    $("#depar_ciu_reg_r").val("VALLE DEL CAUCA-CALI");


    $("#title").val("titulo");
    $("#description").val("description");
    $("#resumen").val("resumen");
    //document.getElementById("resumen2").value = "resumen de viaje";
    codigounico();

  }//fin boton llenar

  $('input:radio[name=tipo_trayecto]').change(function () {
    if (this.value == 'solo_ida') {
      // alert("solo_ida");

      $("#tipo_trayecto2").val("solo_ida");
      on_off_content_div('regreso', true);
      on_off_content_div('libre_btn', false);

    } else if (this.value == 'ida_regreso') {
      //alert("ida_regreso");
      $("#tipo_trayecto2").val("ida_regreso");
      $('#tiempo_recogida').data("DateTimePicker").minDate(moment());
      on_off_content_div('regreso', false);
      on_off_content_div('libre_btn', false);

    } else if (this.value == 'libre') {
      // alert("libre");
      $("#tipo_trayecto2").val("libre");
      on_off_content_div('regreso', true);
      on_off_content_div('libre_btn', true);

    }
  });

  $('#contrato').on('change', function () {
    codigounico();
  });

  //funciones

  function on_off_content_div(div, on_off) {
    var el = document.getElementById(div),
      all = el.getElementsByTagName('*'),
      i;
    for (i = 0; i < all.length; i++) {
      //all[i].hidden = on_off;
      all[i].disabled = on_off;
    }
  }


  var isMobile = {
    Android: function () {
      return navigator.userAgent.match(/Android/i);
    },
    BlackBerry: function () {
      return navigator.userAgent.match(/BlackBerry/i);
    },
    iOS: function () {
      return navigator.userAgent.match(/iPhone|iPad|iPod/i);
    },
    Opera: function () {
      return navigator.userAgent.match(/Opera Mini/i);
    },
    Windows: function () {
      return navigator.userAgent.match(/IEMobile/i);
    },
    any: function () {
      return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
    }
  };

  function codigounico() {
    //ide unico
    var d = new Date();
    var cod = d.getFullYear() + "" + (d.getMonth() + 1) + "" + d.getDate() + "_" + d.getHours() + "" + d.getMinutes() + "" + d.getSeconds();
    var contra = $('#contrato').val();
    $('#id_reg_mas').val(contra + "_" + cod);
  }



</script>