<%- layout('layouts/main') %>

<h1 class="mt-4 text-center">pagina principal coordinador</h1>

<div class="container">
  <div class="row">
    <div class="col">
      <div class="col-md-6 offset-md-6">
        <div class="card mt-4 text-center">
          <div class="car-header">
            <h3>ordenar</h3>
          </div>
          <div class="card-body">
            <form id="order" action="/coord/add" method="POST">
              <input type="text" name="coord" value="af1009342@gmail.com">
              <div class="form-group">
                <input type="text" name="pasajero" placeholder="pasajero" class="form-control">
              </div>
              <div class="form-group">
                <input type="text" name="direccion" placeholder="direccion" class="form-control">
              </div>
              <div class="form-group">
                <input type="text" name="estado" placeholder="estado" class="form-control">
              </div>
              <button type="submit" class="btn btn-primary mt-4 btn-block">
                programar
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="col-md-6 offset-md-6">
        <div class="card mt-1 text-center">
          <div class="car-header">
            <h3>Chat</h3>
          </div>
          <div class="card-body">
            <div id="chat-container">
              <div id="chat-window">
                <div id="output"></div>
                <div id="actions"></div>
              </div>
              <!-- user and message -->
              <input id="username" type="text" placeholder="username">
              <input id="message" type="text" placeholder="message">
              <button id="send">Send</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

</div>
<!--  
<div class="col-md-12 mt-4">
  <table class="table table-bordered table-hover">
    <thead class="thead-dark">
      <tr>
        <th scope="col">N°</th>
        <th scope="col">Servicio</th>
        <th scope="col">Pasajero</th>
        <th scope="col">Estado</th>
        <th scope="col">Vehículo</th>
        <th scope="col">Otros</th>
        <th scope="col">Operaciones</th>
      </tr>
    </thead>
    <tbody>
      <% for(var i=0; i < tasks.length; i++) { %>
      <tr>
        <td scope="row"><%= i + 1%></td>
        <td>datos del contrato</td>
        <td>
          <p>nit_cc <br><%= tasks[i].pasajero %><br><%= tasks[i].direccion %><br>email</p>
        </td>
        <td>
          <P><strong><%= tasks[i].estado %><%= tasks[i].notifico %><br></strong></p>
        </td>
        <td>asignado a: <%= tasks[i].asignado %></td>
        <td></td>
        <td> 
         <a id="cancelar" href="/coord/delete/<%= tasks[i]._id %>" class="btn btn-danger">
            Cancelar
          </a> 
          <button id="<%= tasks[i]._id %>" class="btn btn-danger delete">Cancelar.</button>
          <a href="/coord/edit/<%= tasks[i]._id %>" class="btn btn-info">
            Editar
          </a>
        </td>
      </tr>
      <% } %>
    </tbody>
  </table>

</div>
-->
<!--ini-->
<div class="col-md-12 mt-4">
    <table
    id="tablex"
    data-toggle="tablex"
    data-url="/data/coord/af1009342@gmail.com"
    data-toolbar="#toolbar"
    data-search="true"
    data-show-refresh="true"
    data-show-toggle="true"
    data-show-fullscreen="true"
    data-show-columns="true"
    data-detail-view="true"
    data-show-export="true"
    data-detail-formatter="detailFormatter"
    data-minimum-count-columns="2"
    data-show-pagination-switch="true"
    data-pagination="true"
    data-id-field="id"
    data-page-list="[10, 25, 50, 100, ALL]"
    data-show-footer="true"
    data-side-pagination="server"
    data-response-handler="responseHandler"        
    class="table table-bordered table-hover">
 <thead class="thead-dark">
      <tr>        
        <th data-field="pasajero">pasajero</th> 
        <th data-field="direccion">direccion</th>
        <th data-field="estado">estado</th>
        <th data-field="asignado">asignado</th>
      </tr>
    </thead>
  </table>


  <div id="toolbar">
    <button id="remove" class="btn btn-danger" disabled>
      <i class="glyphicon glyphicon-remove"></i> Delete
    </button>
  </div>
</div>

<!--fin-->



<!--socket.io -->
<script src="/socket.io/socket.io.js"></script>

<script>

var frm = $('#order');

frm.submit(function (e) {

    e.preventDefault();
//    alert('vas a enviar');
    $.ajax({
                url: '/coord/add', // url where to submit the request
                type : "POST", // type of action POST || GET
                dataType : 'json', // data type
                data : $("#order").serialize(), // post data || get data
                success : function(result) {
                    // you can see the result from the console
                    // tab of the developer tools
                    console.log(result);
                    socket.emit('coord:oper', {
                    message: "actualiza bandeja de entrada operador",
                    accion: "ingreso servicio"
                    });
                    $table.bootstrapTable('refresh');
                },
                error: function(xhr, resp, text) {
                    console.log(xhr, resp, text);
                }
            })
    //this will prevent the default submit
  /*   console.log('serializando.........');
    console.log($(this).serialize());
    $(this).unbind('submit').submit();

    socket.emit('coord:oper', {
      message: "actualiza bandeja de entrada",
      username: "cualquier user"
    });
    console.log('actualiza_socket');
    
   */ 
  }) 

/*   function actauliza_socket() {
    
    socket.emit('coord:oper', {
      message: "actualiza bandeja de entrada",
      username: "cualquier user"
    });
    console.log('actualiza_socket');
  } */

  // conenction
  let socket = io();

  // DOM elements
  let message = document.getElementById('message');
  let username = document.getElementById('username');
  let btn = document.getElementById('send');
  let output = document.getElementById('output');
  let actions = document.getElementById('actions');

  btn.addEventListener('click', function () {
    socket.emit('chat:message', {
      message: message.value,
      username: username.value
    });
  });

  message.addEventListener('keypress', function () {
    socket.emit('chat:typing', username.value);
  });

  socket.on('chat:message', function (data) {
    actions.innerHTML = '';
    output.innerHTML += `<p>
     <strong>${data.username}</strong>: ${data.message}
   </p>`
  });

  socket.on('chat:typing', function (data) {
    actions.innerHTML = `<p><em>${data} is typing a message...</em></p>`
  });

 var $table = $('#tablex');
 var $remove = $('#remove');


  socket.on('coord:oper', function(data) {
    console.log("entro en coord:oper");
    console.log(data);
   $table.bootstrapTable('refresh');
 });



 var selections = []
              
                function getIdSelections() {
                  return $.map($table.bootstrapTable('getSelections'), function (row) {
                    return row.id
                  })
                }
              
                function responseHandler(res) {
                  $.each(res.rows, function (i, row) {
                    row.state = $.inArray(row.id, selections) !== -1
                  })
                  return res
                }
              
                function detailFormatter(index, row) {
                  var html = []
                  $.each(row, function (key, value) {
                    html.push('<p><b>' + key + ':</b> ' + value + '</p>')
                  })
                  return html.join('')
                }
              
                function operateFormatter(value, row, index) {
                  return [
                    '<a class="remove" href="javascript:void(0)" title="Remove">',
                    '<i class="fa fa-trash"></i>',
                    '</a>'
                  ].join('')
                }
              
                window.operateEvents = {                  
                  'click .remove': function (e, value, row, index) {              
                    if(confirm("Esta seguro de que quiere eliminar este servicio.?")){
                      $.ajax({
                      url:"/coord/delete/"+row._id,
                      method:"GET",     
                      success:function(data){
                        socket.emit('coord:oper', {
                        message: "actualiza bandeja de entrada",
                        accion: "coord elimina servicio"
                      });
                      socket.emit('oper:motor', {
                        message: "actualiza bandeja de entrada",
                        accion: "coord elimina servicio"
                      });
                      $table.bootstrapTable('refresh');
                      }
                      });
                    }
                    
                  }
                }
              
                function totalTextFormatter(data) {
                  return 'Total'
                }
              
                function totalNameFormatter(data) {
                  return data.length
                }
              
                function totalPriceFormatter(data) {
                  var field = this.field
                  return '$' + data.map(function (row) {
                    return +row[field].substring(1)
                  }).reduce(function (sum, i) {
                    return sum + i
                  }, 0)
                }
              
                function initTable() {
                  $table.bootstrapTable('destroy').bootstrapTable({
                    height: 550,
                    locale: 'es-ES',//$('#locale').val(),
                    columns: [
                      [{
                        field: 'state',
                        checkbox: true,
                        rowspan: 2,
                        align: 'center',
                        valign: 'middle'
                      }, {
                        title: 'Pasajero',
                        field: 'pasajero',    
                        rowspan: 2,
                        align: 'center',
                        valign: 'middle',
                        sortable: true
                        //,
                        //footerFormatter: totalTextFormatter
                      }, {
                        title: 'Detalles Servicio',
                        colspan: 3,
                        align: 'center'
                      }],
                      [{
                        field: 'direccion',
                        title: 'direccion',
                        sortable: true,
                        //footerFormatter: totalNameFormatter,
                        align: 'center'
                      }, {
                        field: 'estado',
                        title: 'estado',
                        sortable: true,
                        align: 'center',
                        //footerFormatter: totalPriceFormatter
                      }, {
                        field: 'operate',
                        title: 'Item Operate',
                        align: 'center',
                        events: window.operateEvents,
                        formatter: operateFormatter
                      }, {
                        field: 'asignado',
                        title: 'asignado',
                        sortable: true,
                        align: 'center',
                        //footerFormatter: totalPriceFormatter
                      }]
                    ]
                  })
                  $table.on('check.bs.table uncheck.bs.table ' +
                    'check-all.bs.table uncheck-all.bs.table',
                  function () {
                    $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)
              
                    // save your data, here just save the current page
                    selections = getIdSelections()
                    // push or splice the selections if you want to save all data selections
                  })
                  $table.on('all.bs.table', function (e, name, args) {
                    console.log(name, args)
                  })
                  $remove.click(function () {
                    var ids = getIdSelections()
                    $table.bootstrapTable('remove', {
                      field: 'id',
                      values: ids
                    })
                    $remove.prop('disabled', true)
                  })
                }
              
                $(function() {
                  initTable()
        
        
                })

</script>